server:
    module-config: "validator cachedb iterator"
    
    root-hints: "/etc/unbound/root.hints"
    auto-trust-anchor-file: "/var/lib/unbound/root.key"
    pidfile: "/etc/unbound/unbound.pid"
    logfile: "/etc/unbound/unbound.log"

    # listen on	all interfaces,	answer queries from the	local subnet.
    interface: 0.0.0.0
    interface: ::0
    access-control: 0.0.0.0/0 allow
    access-control: 2001:DB8::/64 allow

    verbosity: 0                # 1 # No verbosity, only errors
    # ip-freebind: yes            # Allows to bind to interface IP before network is online at boot or network is down.
    # do-daemonize: no            # Prevent the unbound server from forking into the background as a daemon

    num-threads: 4              # The number of threads to create to serve clients
    msg-cache-slabs: 4          # Set *-slabs to a power of 2
    rrset-cache-slabs: 4        # close to the num-threads value.
    infra-cache-slabs: 4        # This reduces lock contention.
    key-cache-slabs: 4

    use-caps-for-id: yes        # This perturbs the lowercase and uppercase of query names sent to authority servers and checks if the reply still has the correct casing
    
    harden-large-queries: yes   # Very large queries are ignored
    harden-algo-downgrade: yes  # Harden against algorithm downgrade when multiple algorithms are advertised in the DS record
    harden-short-bufsize: yes   # Very small EDNS buffer sizes from queries are ignored
    
    prefetch: yes               # message cache elements are prefetched before they expire to keep the cache up to date
    prefetch-key: yes           # fetch the DNSKEYs earlier in the validation process, when a DS record is encountered
    serve-expired: yes          # Unbound attempts to serve old responses from cache without waiting for the actual resolution to finish
    serve-expired-ttl: 864000   # 864000 equals to 10 days in seconds
    
    outgoing-range: 200         # Number of ports to open. This number of file descriptors can be opened per thread
    outgoing-num-tcp: 100       # 10 # Number of outgoing TCP buffers to allocate per thread *increasing this value is a good idea
    incoming-num-tcp: 100       # 10 # Number of incoming TCP buffers to allocate per thread *increasing this value is a good idea
    
    key-cache-size: 512m        # 4m # Number of bytes size of the key cache

    msg-cache-size: 256m        # 4m # Number of bytes size of the message cache
    rrset-cache-size: 512m      # 4m # Number of bytes size of the RRset cache
    neg-cache-size: 256m        # 1m # Number of bytes size of the aggressive negative cache

    so-rcvbuf: 4m               # 0 (use system value) # option to get more buffer space on UDP port 53 incoming queries *prevents packets drop
    so-sndbuf: 4m               # 0 (use system value) # option to get more buffer space on UDP port 53 incoming queries *prevents packets drop

    deny-any: yes               # deny queries of type ANY with an empty response
    hide-identity: yes          # If enabled ‘id.server’ and ‘hostname.bind’ queries are REFUSED
    hide-version: yes           # If enabled ‘version.server’ and ‘version.bind’ queries are REFUSED
    identity: "DNS"             # Set the identity to report. If set to "", then the hostname of the server is returned.

    # If set, a total number of unwanted replies is kept track of in every thread. When it reaches the threshold, 
    # a defensive action is taken and a warning is printed to the log. The defensive action is to clear the rrset and message caches, 
    # hopefully flushing away any poison. A value of 10 million is suggested.
    unwanted-reply-threshold: 1000000

    # Ensure privacy of local IP ranges
    private-address: 192.168.0.0/16
    private-address: 169.254.0.0/16
    private-address: 172.16.0.0/12
    private-address: 10.0.0.0/8
    private-address: fd00::/8
    private-address: fe80::/10


remote-control:
    control-enable: yes         # Enable Remote Control
    control-interface: 127.0.0.1

    server-key-file: "/etc/unbound/unbound_server.key"
    server-cert-file: "/etc/unbound/unbound_server.pem"
    control-key-file: "/etc/unbound/unbound_control.key"
    control-cert-file: "/etc/unbound/unbound_control.pem"

cachedb:
    backend: "redis"
    secret-seed: "default"
    redis-server-path: "/var/run/redis/redis.sock"
    redis-timeout: 1000
    redis-expire-records: no
